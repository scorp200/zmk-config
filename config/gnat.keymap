/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF_L 0
#define NAV_L 1
#define UPP_L 2

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&sk {
  release-after-ms = <60000>;
};

/ {
    ZMK_MACRO(mo_nav,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
        = <&macro_tap &kp K_CANCEL>
        , <&macro_press &mo NAV_L>
        , <&macro_pause_for_release>
        , <&macro_release &mo NAV_L>;)

    ZMK_MACRO(mo_upp,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
        = <&macro_tap &kp K_CANCEL>
        , <&macro_press &mo UPP_L>
        , <&macro_pause_for_release>
        , <&macro_release &mo UPP_L>;)
        
    combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
          combo_##NAME { \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
          };
        /*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │      0   1   2   3 │ │ 19  18  17  16     │
          │  4   5   6   7   8 │ │ 24  23  22  21  20 │
          │  9  10  11  12  13 │ │ 29  28  27  26  25 │
          ╰───────────╮ 14  15 │ │ 31  30 ╭───────────╯
                      ╰────────╯ ╰────────╯            */
        // Letters
        COMBO(lower_q, &kp Q, 0 1, DEF_L)
        COMBO(upper_q, &kp LS(Q), 0 1, UPP_L)
        
        COMBO(lower_semi, &kp SEMI, 17 16, DEF_L)
        COMBO(upper_semi, &kp LS(SEMI), 17 16, UPP_L)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                           &kp W         &kp F         &kp P         &kp G             &kp J         &kp L         &kp U         &kp Y
             &kp A         &kp R         &kp S         &kp T         &kp D             &kp H         &kp N         &kp E         &kp I         &kp O
             &kp Z         &kp X         &kp C         &kp V         &kp B             &kp K         &kp M         &kp COMMA     &kp DOT       &kp SLASH
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &kp SPACE         &mo_upp       &trans
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                           &trans        &kp F         &kp P         &kp G             &kp PG_UP     &kp L         &kp U         &kp Y
             &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHFT     &kp D             &kp PG_DN     &kp LARW      &kp DARW      &kp UARW      &kp RARW
             &kp Z         &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp B             &kp K         &kp M         &kp COMMA     &kp DOT       &kp SLASH
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans            &kp BSPC      &kp DEL
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        upper_layer {
            label = "Upp";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                           &kp LS(W)     &kp LS(F)     &kp LS(P)     &kp LS(G)         &kp LS(J)     &kp LS(L)     &kp LS(U)     &kp LS(Y)
             &kp LS(A)     &kp LS(R)     &kp LS(S)     &kp LS(T)     &kp LS(D)         &kp LS(H)     &kp LS(N)     &kp LS(E)     &kp LS(I)     &kp LS(O)
             &kp LS(Z)     &kp LS(X)     &kp LS(C)     &kp LS(V)     &kp LS(B)         &kp LS(K)     &kp LS(M)     &kp COMMA     &kp DOT       &kp SLASH
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &kp LS(SPACE)     &trans        &trans
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        sys_layer {
            label = "Sys";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                           &none         &none         &none         &none             &none         &none         &none         &none
             &none         &none         &none         &none         &none             &none         &none         &none         &none         &none
             &none         &none         &none         &none         &none             &none         &none         &none         &none         &none
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &none         &none             &none         &none
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
    };
};